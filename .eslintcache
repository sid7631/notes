[{"/Users/sid/Dev/repos/notes/src/index.js":"1","/Users/sid/Dev/repos/notes/src/App.js":"2","/Users/sid/Dev/repos/notes/src/reportWebVitals.js":"3","/Users/sid/Dev/repos/notes/src/store/configStore.js":"4","/Users/sid/Dev/repos/notes/src/components/auth/AuthenticatedRoute.js":"5","/Users/sid/Dev/repos/notes/src/components/auth/UnauthenticatedRoute.js":"6","/Users/sid/Dev/repos/notes/src/components/utils/UtilWrapper.jsx":"7","/Users/sid/Dev/repos/notes/src/containers/dashboard/Dashboard.jsx":"8","/Users/sid/Dev/repos/notes/src/containers/home-page/sign-in/SignIn.jsx":"9","/Users/sid/Dev/repos/notes/src/containers/home-page/sign-up/SignUp.jsx":"10","/Users/sid/Dev/repos/notes/src/containers/home-page/HomePage.jsx":"11","/Users/sid/Dev/repos/notes/src/store/actions/index.js":"12","/Users/sid/Dev/repos/notes/src/store/reducers/index.js":"13","/Users/sid/Dev/repos/notes/src/helper/WithLoading.js":"14","/Users/sid/Dev/repos/notes/src/store/actions/auth.js":"15","/Users/sid/Dev/repos/notes/src/store/reducers/auth.js":"16","/Users/sid/Dev/repos/notes/src/store/actions/action-types.js":"17","/Users/sid/Dev/repos/notes/src/firebase.js":"18","/Users/sid/Dev/repos/notes/src/components/sidebar/Sidebar.jsx":"19","/Users/sid/Dev/repos/notes/src/containers/dashboard/notes/Notes.jsx":"20","/Users/sid/Dev/repos/notes/src/containers/dashboard/todo/TodoList.jsx":"21","/Users/sid/Dev/repos/notes/src/components/notes/NoteList.jsx":"22","/Users/sid/Dev/repos/notes/src/components/notes/NoteEditor.jsx":"23"},{"size":838,"mtime":1614250797239,"results":"24","hashOfConfig":"25"},{"size":1682,"mtime":1614251304226,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1614223715041,"results":"27","hashOfConfig":"25"},{"size":1050,"mtime":1614223715042,"results":"28","hashOfConfig":"25"},{"size":738,"mtime":1614223715039,"results":"29","hashOfConfig":"25"},{"size":1112,"mtime":1614223715039,"results":"30","hashOfConfig":"25"},{"size":2106,"mtime":1614223715040,"results":"31","hashOfConfig":"25"},{"size":1361,"mtime":1614253425547,"results":"32","hashOfConfig":"25"},{"size":3271,"mtime":1614235412562,"results":"33","hashOfConfig":"25"},{"size":5098,"mtime":1614235610897,"results":"34","hashOfConfig":"25"},{"size":1599,"mtime":1614237057086,"results":"35","hashOfConfig":"25"},{"size":99,"mtime":1614223715041,"results":"36","hashOfConfig":"25"},{"size":142,"mtime":1614223715042,"results":"37","hashOfConfig":"25"},{"size":275,"mtime":1614223715041,"results":"38","hashOfConfig":"25"},{"size":2775,"mtime":1614223715041,"results":"39","hashOfConfig":"25"},{"size":708,"mtime":1614223715042,"results":"40","hashOfConfig":"25"},{"size":156,"mtime":1614223715041,"results":"41","hashOfConfig":"25"},{"size":520,"mtime":1614223715040,"results":"42","hashOfConfig":"25"},{"size":2563,"mtime":1614493102818,"results":"43","hashOfConfig":"25"},{"size":304,"mtime":1614616191130,"results":"44","hashOfConfig":"25"},{"size":145,"mtime":1614251423917,"results":"45","hashOfConfig":"25"},{"size":5920,"mtime":1614616100821,"results":"46","hashOfConfig":"25"},{"size":175,"mtime":1614616366170,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"gvtewi",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sid/Dev/repos/notes/src/index.js",[],["101","102"],"/Users/sid/Dev/repos/notes/src/App.js",["103"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport AuthenticatedRoute from './components/auth/AuthenticatedRoute'\nimport UnauthenticatedRoute from './components/auth/UnauthenticatedRoute'\nimport Sidebar from './components/sidebar/Sidebar'\nimport UtilWrapper from './components/utils/UtilWrapper'\n\nimport Dashboard from './containers/dashboard/Dashboard'\nimport HomePage from './containers/home-page/HomePage'\nimport SignIn from './containers/home-page/sign-in/SignIn'\nimport SignUp from './containers/home-page/sign-up/SignUp'\nimport { verifyAuth } from './store/actions'\n\n\nexport class App extends Component {\n\n  componentDidMount() {\n    this.props.verifyAuth()\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    return (\n      <UtilWrapper>\n        <div className=\"App\">\n          <Switch>\n            <UnauthenticatedRoute path='/' exact >\n              <HomePage />\n            </UnauthenticatedRoute>\n            <AuthenticatedRoute path='/dashboard'>\n              <Sidebar/>\n              <Dashboard />\n            </AuthenticatedRoute>\n            <UnauthenticatedRoute exact path='/sign-up'>\n              <SignUp />\n            </UnauthenticatedRoute>\n            <UnauthenticatedRoute exact path='/sign-in'>\n              <SignIn />\n            </UnauthenticatedRoute>\n            <Redirect to='/' />\n          </Switch>\n        </div>\n      </UtilWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n})\n\nconst mapDispatchToProps = {\n  verifyAuth,\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/sid/Dev/repos/notes/src/reportWebVitals.js",[],"/Users/sid/Dev/repos/notes/src/store/configStore.js",[],"/Users/sid/Dev/repos/notes/src/components/auth/AuthenticatedRoute.js",[],"/Users/sid/Dev/repos/notes/src/components/auth/UnauthenticatedRoute.js",[],"/Users/sid/Dev/repos/notes/src/components/utils/UtilWrapper.jsx",["104","105"],"import { Snackbar, Grow } from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport \"./Loading.scss\"\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst UtilWrapper = ({ children, ...props }) => {\n\n    const isLoading = useSelector(state => state.auth.loading)\n    const authError = useSelector(state => state.auth.error)\n    const [notify, setnotify] = useState(false)\n    const [transition, settransition] = useState(Grow)\n    const [notifyType, setnotifyType] = useState(\"info\")\n    const [notifyMessage, setnotifyMessage] = useState(null)\n\n    const snackbarOptions = {\n        anchorOrigin: { 'vertical': 'top', 'horizontal': 'center' },\n        open: notify,\n        onClose: () => setnotify(false),\n        TransitionComponent: transition,\n        key: transition.name,\n    }\n\n    useEffect(() => {\n        if (authError) {\n            setnotify(true)\n            setnotifyType('error')\n            setnotifyMessage(authError)\n        } else {\n            setnotify(false)\n        }\n\n        return () => {\n            // cleanup\n        }\n    }, [authError])\n\n    return (\n        <React.Fragment {...props}>\n            <Snackbar\n                {...snackbarOptions}\n            >\n                <Alert onClose={() => setnotify(false)} severity={notifyType}>\n                    {notifyMessage}\n                </Alert>\n            </Snackbar>\n\n            {isLoading ? (\n                <div className=\"loading-container\" >\n                    <div className=\"loading-body\">\n                        <div className=\"loading-icon-container\"><img src=\"/images/loading.gif\" className=\"loading-icon\" /></div>\n                        <div className=\"loading-line\">\n                            <div className=\"inner\"></div>\n                        </div>\n                    </div>\n\n                </div >\n            ) : (\n                    children\n                )}\n        </React.Fragment>\n\n\n    )\n\n}\nexport default UtilWrapper\n\n\n","/Users/sid/Dev/repos/notes/src/containers/dashboard/Dashboard.jsx",["106","107","108"],"import { Button } from '@material-ui/core';\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport { Switch, useHistory} from 'react-router-dom';\nimport AuthenticatedRoute from '../../components/auth/AuthenticatedRoute';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport { userSignOut } from '../../store/actions';\nimport Notes from './notes/Notes';\nimport TodoList from './todo/TodoList';\n\nimport './Dashboard.scss';\n\nconst Dashboard = (props) => {\n\n    const history = useHistory()\n\n\n\n    async function handleLogout() {\n        await props.userSignOut(function(){history.push('/sign-in')});\n\n    }\n\n    return (\n        <div className=\"content\">\n            {/* <Button onClick={handleLogout}>Sign Out</Button> */}\n            <Switch>\n                <AuthenticatedRoute exact path='/dashboard/notes'>\n                    <Notes />\n                </AuthenticatedRoute>\n                <AuthenticatedRoute exact path='/dashboard/todolist'>\n                    <TodoList />\n                </AuthenticatedRoute>\n            </Switch>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        loading:state.auth.loading,\n    }\n}\n\nconst mapDispatchToProps = {\n    userSignOut\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","/Users/sid/Dev/repos/notes/src/containers/home-page/sign-in/SignIn.jsx",["109","110"],"import React, { useState } from 'react';\nimport {  Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userSignIn } from '../../../store/actions';\n\nimport { FormControl, InputLabel, Input, FormHelperText, FormGroup, Button, Card, CardContent, Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nfunction SignIn(props) {\n\n    const initialHelperText = {email:\"We'll never share your email\",password:'Enter password of length 8.'};\n\n    const [email, setemail] = useState(null)\n    const [password, setpassword] = useState(null)\n    const [helperText, sethelperText] = useState(initialHelperText)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try{\n            await props.userSignIn(email, password)\n        } catch (error) {\n            console.log(error)\n        }    \n    }\n\n\n\n\n    return (\n        <Container className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: '100vh' }}>\n            <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                <Paper>\n                    <CardContent>\n                        <h2 className=\"text-center mb-4\">Sign In</h2>\n                        <form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <FormControl className=\"my-2\">\n                                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                                <Input \n                                    id=\"my-input\" \n                                    type=\"email\"\n                                    aria-describedby=\"my-input-text\"  \n                                    onChange={e => setemail(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-input-text\">{helperText['email']}</FormHelperText>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                                <Input \n                                    type=\"password\" \n                                    id=\"my-password\" \n                                    aria-describedby=\"my-password-text\" \n                                    onChange={e => setpassword(e.target.value)}\n                                    required />\n                                <FormHelperText id=\"my-password-text\">{helperText['password']}</FormHelperText>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" className=\"w-100 mt-2\" type=\"submit\" >Sign In</Button>\n                        </FormGroup>\n                        </form>\n                    </CardContent>\n                </Paper>\n                <div className=\"w-100 text-center mt-2\">\n                    Not a member? <Link to={'/sign-up'}>Sign Up</Link>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        loading: state.auth.loading,\n    }\n}\n\nconst mapDispatchToProps = {\n    userSignIn\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","/Users/sid/Dev/repos/notes/src/containers/home-page/sign-up/SignUp.jsx",["111","112","113","114","115","116","117"],"import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { userSignUp } from '../../../store/actions';\n\nimport { FormControl, InputLabel, Input, FormHelperText, FormGroup, Button, Card, CardContent, Paper } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction SignUp(props) {\n\n    const initialHelperText = {email:\"We'll never share your email\",password:'Enter password of length 8.',passwordMatch:'Re-enter Password'};\n    \n    const [email, setemail] = useState(null)\n    const [password, setpassword] = useState(null)\n    const [confirmPassword, setconfirmPassword] = useState(null)\n    const [helperText, sethelperText] = useState(initialHelperText)\n    const [isValid, setisValid] = useState({ email: false, password: false, passwordMatch: false })\n\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        props.userSignUp(email, password, true, function () { history.push('/') })\n    }\n\n    function handleValidation() {\n\n    }\n\n    function handleEmail(e) {\n        setisValid({...isValid,['email']:e.target.validity.valid});\n    }\n    function handlePassword(e) {\n        setisValid({...isValid,['password']:e.target.validity.valid})\n    }\n    function handleConfirmPassowrd(e) {\n        setisValid({...isValid,['passwordMatch']:e.target.validity.valid})\n    }\n\n\n\n\n    return (\n        <Container className=\"d-flex align-items-center justify-content-center\"\n            style={{ minHeight: '100vh' }}>\n            <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                <Paper >\n                    <CardContent>\n                        <h2 className=\"text-center mb-4\">Sign Up</h2>\n                        <form onSubmit={handleSubmit}>\n                            <FormGroup>\n                                <FormControl className=\"my-2\">\n                                    <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                                    <Input\n                                    \n                                        type=\"email\"\n                                        id=\"my-input\"\n                                        aria-describedby=\"my-input-text\"\n                                        onChange={e => setemail(e.target.value)}\n                                        onBlur={handleEmail}\n                                        error={false}\n                                        required />\n                                    <FormHelperText id=\"my-input-text\">{helperText['email']}</FormHelperText>\n                                </FormControl>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"my-password\">Password</InputLabel>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"my-password\"\n                                        aria-describedby=\"my-password-text\"\n                                        onChange={e => setpassword(e.target.value)}\n                                        onBlur={handlePassword}\n                                        inputProps={{\n                                            minLength:8\n                                        }}\n                                        required />\n                                    <FormHelperText id=\"my-password-text\">{helperText['password']}</FormHelperText>\n                                </FormControl>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"my-confirm-password\">Confirm Password</InputLabel>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"my-confirm-password\"\n                                        aria-describedby=\"my-confirm-password-text\"\n                                        onChange={e => setconfirmPassword(e.target.value)}\n                                        onBlur={handleConfirmPassowrd}\n                                        minLength={8}\n                                        required />\n                                    <FormHelperText id=\"my-confirm-password-text\">{helperText['passwordMatch']}</FormHelperText>\n                                </FormControl>\n                                <Button variant=\"contained\" color=\"primary\" className=\"w-100 mt-2\" type=\"submit\" >Sign Up</Button>\n                            </FormGroup>\n                        </form>\n                    </CardContent>\n                </Paper>\n                <div className=\"w-100 text-center mt-2\">\n                    Already have an account? <Link to={'/sign-in'}>Sign In</Link>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n    }\n}\n\nconst mapDispatchToProps = {\n    userSignUp\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","/Users/sid/Dev/repos/notes/src/containers/home-page/HomePage.jsx",["118","119"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { WithLoading } from '../../helper/WithLoading';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { Box, Button } from '@material-ui/core';\n\nimport './HomePage.scss'\n\nconst HomePage = (props) => {\n\n    const history = useHistory()\n\n    return (\n        <React.Fragment>\n            {props.isAuthenticated ? (\n                <Redirect to={\"/dashboard\"} />\n            ) : (\n                    <div className=\"container-fluid\">\n                        <div className=\"home-navbar\">\n\n                            <div className=\"d-flex justify-content-between\">\n                                <div>\n                                    <h4 className=\"brand\">NOTES</h4>\n                                </div>\n                                <div>\n                                    <Button onClick={() => history.push('/sign-up')}>Sign Up</Button>\n                                    <Button onClick={() => history.push('/sign-in')}>Sign In</Button>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"home-body\">\n                            \n                        </div>\n\n                    </div>\n                )\n            }\n        </React.Fragment>\n\n\n\n    )\n\n\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default WithLoading(connect(mapStateToProps, mapDispatchToProps)(HomePage))\n","/Users/sid/Dev/repos/notes/src/store/actions/index.js",[],"/Users/sid/Dev/repos/notes/src/store/reducers/index.js",[],"/Users/sid/Dev/repos/notes/src/helper/WithLoading.js",[],"/Users/sid/Dev/repos/notes/src/store/actions/auth.js",[],"/Users/sid/Dev/repos/notes/src/store/reducers/auth.js",[],"/Users/sid/Dev/repos/notes/src/store/actions/action-types.js",[],"/Users/sid/Dev/repos/notes/src/firebase.js",[],"/Users/sid/Dev/repos/notes/src/components/sidebar/Sidebar.jsx",[],"/Users/sid/Dev/repos/notes/src/containers/dashboard/notes/Notes.jsx",[],"/Users/sid/Dev/repos/notes/src/containers/dashboard/todo/TodoList.jsx",[],"/Users/sid/Dev/repos/notes/src/components/notes/NoteList.jsx",["120"],"/Users/sid/Dev/repos/notes/src/components/notes/NoteEditor.jsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":20,"nodeType":"127","messageId":"128","endLine":3,"endColumn":25},{"ruleId":"125","severity":1,"message":"129","line":16,"column":24,"nodeType":"127","messageId":"128","endLine":16,"endColumn":37},{"ruleId":"130","severity":1,"message":"131","line":55,"column":65,"nodeType":"132","endLine":55,"endColumn":123},{"ruleId":"125","severity":1,"message":"133","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"125","severity":1,"message":"134","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":15},{"ruleId":"125","severity":1,"message":"135","line":19,"column":20,"nodeType":"127","messageId":"128","endLine":19,"endColumn":32},{"ruleId":"125","severity":1,"message":"136","line":6,"column":77,"nodeType":"127","messageId":"128","endLine":6,"endColumn":81},{"ruleId":"125","severity":1,"message":"137","line":15,"column":24,"nodeType":"127","messageId":"128","endLine":15,"endColumn":37},{"ruleId":"125","severity":1,"message":"136","line":6,"column":77,"nodeType":"127","messageId":"128","endLine":6,"endColumn":81},{"ruleId":"125","severity":1,"message":"138","line":15,"column":12,"nodeType":"127","messageId":"128","endLine":15,"endColumn":27},{"ruleId":"125","severity":1,"message":"137","line":16,"column":24,"nodeType":"127","messageId":"128","endLine":16,"endColumn":37},{"ruleId":"125","severity":1,"message":"139","line":26,"column":14,"nodeType":"127","messageId":"128","endLine":26,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":31,"column":32,"nodeType":"142","messageId":"143","endLine":31,"endColumn":65,"fix":"144"},{"ruleId":"140","severity":1,"message":"145","line":34,"column":32,"nodeType":"142","messageId":"143","endLine":34,"endColumn":68,"fix":"146"},{"ruleId":"140","severity":1,"message":"147","line":37,"column":32,"nodeType":"142","messageId":"143","endLine":37,"endColumn":73,"fix":"148"},{"ruleId":"125","severity":1,"message":"149","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":14},{"ruleId":"125","severity":1,"message":"150","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"151","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'settransition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Sidebar' is defined but never used.","'handleLogout' is defined but never used.","'Card' is defined but never used.","'sethelperText' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'handleValidation' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['email'] found.","Property","unnecessarilyComputedProperty",{"range":"154","text":"155"},"Unnecessarily computed property ['password'] found.",{"range":"156","text":"157"},"Unnecessarily computed property ['passwordMatch'] found.",{"range":"158","text":"159"},"'Link' is defined but never used.","'Box' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",[1151,1160],"'email'",[1258,1270],"'password'",[1374,1391],"'passwordMatch'"]